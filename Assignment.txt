Assignment Part -II 

Q26. What is a string? How can we declare string in G3333333333333333333333334?
Strings are type of data  through we are able to store data in characters which are wrapped inside single or double qoutes 
Q27. How can we access the string using its index?
To access a string we simply use its index with square brackets 
greet='hello'
greet[0]
'h'
Q28. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "iNeuron"
```
string[9:]
Q29. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "norueNi"
```
string[:8:-1]
Q30. Resverse the string given in the above question.
string[::-1]
Q31. How can you delete entire string at once?
We can simply use "Del " keyword from keybord to delte a string . I am not sure if there exists any menthod 
Q32. What is escape sequence?
These are sequence of characters that, when used inside a character or string, does not represent itself but is converted into another character or 
series of characters that may be difficult or impossible to express directly, like newline (\n), tab (\t), and so on.
Q33. How can you print the below string?
```
'iNeuron's Big Data Course'
```
print ('iNeuron\'s Big Data Course')

Q34. What is a list in Python?
Lists are used to store multiple items in a single variable.
List items are ordered, changeable, and allow duplicate values.

Q35. How can you create a list in Python?

To create a list we simply use square brackets where we store values for variable seperated by commas.
for exampple
mylist = ["apple", "banana", "cherry"]


Q36. How can we access the elements in a list?

We can access list by their index numbers 
mylist = ["apple", "banana", "cherry"]
print(mylist[1])



Q37. Write a code to access the word "iNeuron" from the given list.
```
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
``` 
print(lst[4][2])

Q38. Take a list as an input from the user and find the length of the list.
input_string = input('Enter elements of a list separated by space ')
print("\n")
user_list = input_string.split()
# print list
print('Length of list is : ', len(user_list))

Q39. Add the word "Big" in the 3rd index of the given list.
```
lst = ["Welcome", "to", "Data", "course"]
lst.insert(3, "Big")
print(lst)
```

Q40. What is a tuple? How is it different from list?
Tuples are type of data type which is ordered and unchangebale while as a list starts with square brackets and are mutable


Q41. How can you create a tuple in Python?
To create a tuple in python we simply do 
test_tuple = ("apple", "banana", "cherry")

Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.
t = (1,2,4,5)
t[0]="sartaj"
It throws TypeError: 'tuple' object does not support item assignment
Unfortunately it wont work as tuples are immutable collection which does not allow us to replace any character 

Q43. Can two tuple be appended. If yes, write a code for it. If not, why?
Yes two tuples can be appended and the procedure to do that is 
tuple1 = ("a", "b" , "c")
tuple2 = (1, 2, 3)
tuple3 = tuple1 + tuple2
print(tuple3)

Q44. Take a tuple as an input and print the count of elements in it.
x = input('Enter the tuple : ')
x = tuple(int(a) for a in x.split(","))
print('Length of Tuple is : ', len(x))

Q45. What are sets in Python?
Sets are one of the built in data types that store multiple values in single variable. The items in the set are unordered which means 
everytime we try to use them they cant be reffered . Sets are unchangebale which means when a set is created its items cant be modified 
and duplicates are also not allowed.


Q46. How can you create a set?
To creat a set we simply need to  us {}:
fruits_set= {"apple", "banana", "cherry"}


Q47. Create a set and add "iNeuron" in your set.

my_set= {"Hi", "banana",}
my_set.add("iNeuron")
print(my_set)


Q48. Try to add multiple values using add() function.
It throws TypeError: set.add() takes exactly one argument (3 given)
which means it takes only one argument

Q49. How is update() different from add()?
add() Adds an element to the set while as update() method updates the current set, by adding items from another set
example 
x = {"apple", "banana", "cherry"}
y = {"google", "microsoft", "apple"}
x.update(y)
print(x)

Q50. What is clear() in sets?
The clear() method removes all elements in a set.
fruits = {"apple", "banana", "cherry"}
fruits.clear()
print(fruits)

Q51. What is frozen set?
Frozen set is just an immutable version of a Python set object. 
While elements of a set can be modified at any time, elements of the frozen set remain the same after creation.

Q52. How is frozen set different from set?
A set is a mutable object while as frozen set is immutable .

Q53. What is union() in sets? Explain via code.
The Python set union() method returns a new set with distinct elements from all the sets.
A = {2, 3, 5}
B = {1, 3, 5}

# compute union between A and B
print('A U B = ', A.union(B))


Q54. What is intersection() in sets? Explain via code.
The intersection() method returns a new set with elements that are common to all sets.
A = {2, 3, 5}
B = {1, 3, 5}

# compute intersection between A and B
print(A.intersection(B))

Q55. What is dictionary ibn Python?
A dictionary consists of a collection of key-value pairs. Each key-value pair maps the key to its associated value.

Q56. How is dictionary different from all other data structures.
The only difference between dictionary and  other data structures is that the dictionary contains key-value pairs.

Q57. How can we delare a dictionary in Python?
Dictionary contains key value pairs .
The basic declration is as ;
Dict = {1: 'Hello', 2: 'World'}
print(Dict)

Q58. What will the output of the following?
```
var = {}
print(type(var))
```
It will display the class of variable var which would be a dictionary . 


Q59. How can we add an element in a dictionary?
We can add an item to a dictionary by using a new index and assigning a value to it 
for example 
dic = {
    "brand" : "Ford",
    "modal" : "Mustang"
    "year"  : 1940
}
dic["color"] = "red"
print(dic)

Q60. Create a dictionary and access all the values in that dictionary.
car = {
"brand": "Ford",
"model": "Mustang",
"year": 1964
}
x= car.values()
print(x)


Q61. Create a nested dictionary and access all the element in the inner dictionary.
people = {1: {'name': 'John', 'age': '27', 'sex': 'Male'},
          2: {'name': 'Marie', 'age': '22', 'sex': 'Female'}}
print(people[2])

Q62. What is the use of get() function?
The get() method returns the value of the item with the specified key.
car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}

x = car.get("price", 15000)

print(x)

Q63. What is the use of items() function?
items() method is used to return the list with all dictionary keys with values.

Dic = { 'Name': 'Ahmad', 'Age': 30, 'Stream': 'Engineering' }
print(Dic.items())

Q64. What is the use of pop() function?
The pop() method in python removes an element in list .To pop an element from an index, we simply use list.pop(index)

Q65. What is the use of popitems() function?

The popitem() method removes the item that was last inserted into the dictionary.The popitem() method removes a random item.The removed item is the return value of the popitem() method, as a tuple,

Q66. What is the use of keys() function?
keys() method in Python returns a view object that displays all the keys. This view object changes according to the changes in the dictionary.

Q67. What is the use of values() function?
The values() method returns a view object. The view object contains the values of the dictionary, as a list.

Q68. What are loops in Python?
A loop statement allows us to execute a statement or group of statements multiple times. 

Q69. How many type of loop are there in Python?
Python offers three types of loops such as for loop , while loop , and nested loop.

Q70. What is the difference between for and while loops?
For Loop:- 
It is used when the number of iterations is known . 

While Loop :-
It is used when the number of iterations is not known and the statement will run until the condition is proved false.

Q71. What is the use of continue statement?
The continue statement passes control to the next iteration of the nearest enclosing do , 
for , or while statement in which it appears, bypassing any remaining statements in the do , for , or while statement body.

Q72. What is the use of break statement?
Break Statement is a loop control statement that is used to terminate the loop. 
As soon as the break statement is encountered from within a loop, the loop iterations stop there, and control returns from the loop immediately to the first statement after the loop. 

Q73. What is the use of pass statement?
The pass statement is used as a placeholder for future code.

Q74. What is the use of range() function?
The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1  and stops before a specified number.

Q75. How can you loop over a dictionary?
There are various methods and one of the easiest ones is that we can iteriate over dictionary with the help of for loop 
statesAndCapitals = {
    'Gujarat': 'Gandhinagar',
    'Maharashtra': 'Mumbai',
    'Rajasthan': 'Jaipur',
    'Bihar': 'Patna'
}
 
print('List Of given states and their capitals:\n')
 
# Iterating over values
for state, capital in statesAndCapitals.items():
    print(state, ":", capital)

### Coding problems
Q76. Write a Python program to find the factorial of a given number.
# Python program to find the factorial of a number provided by the user.

# change the value for a different result
num = 7

# To take input from the user
#num = int(input("Enter a number: "))

factorial = 1

# check if the number is negative, positive or zero
if num < 0:
   print("Sorry, factorial does not exist for negative numbers")
elif num == 0:
   print("The factorial of 0 is 1")
else:
   for i in range(1,num + 1):
       factorial = factorial*i
   print("The factorial of",num,"is",factorial)      

Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (P*R*T)/100

Amount = int(input("Enter the amount: "))
# Enter the number of years
Year = int(input("Enter the number of years: "))
# Enter the rate of interest
Rate = float(input("Enter the rate of interest: "))

SimpleInterset = (Amount*Year*Rate)/100

print("The simple interset is:", SimpleInterset)

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.

Python program to find compound interest 

p = float(input("Enter the principle amount : "))
r = float(input("Enter the rate of interest : "))
t = float(input("Enter the time in the years: "))

# calculating compound interest
ci =  p * (pow((1 + r / 100), t)) 

# printing the values
print("Principle amount  : ", p)
print("Interest rate     : ", r)
print("Time in years     : ", t)
print("compound Interest : ", ci)




Q79. Write a Python program to check if a number is prime or not.

if num == 1:
    print(num, "is not a prime number")
elif num > 1:
   # check for factors
   for i in range(2,num):
       if (num % i) == 0:
           print(num,"is not a prime number")
           print(i,"times",num//i,"is",num)
           break
   else:
       print(num,"is a prime number")
       
# if input number is less than
# or equal to 1, it is not prime
else:
   print(num,"is not a prime number")


Q80. Write a Python program to check Armstrong Number.

num = int(input("Enter a number: "))

# initialize sum
sum = 0

# find the sum of the cube of each digit
temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** 3
   temp //= 10

# display the result
if num == sum:
   print(num,"is an Armstrong number")
else:
   print(num,"is not an Armstrong number")

Q81. Write a Python program to find the n-th Fibonacci Number.

def Fibonacci(n): 
    if n<0: 
        print("Incorrect input") 
    # First Fibonacci number is 0 
    elif n==0: 
        return (0) 
    # Second Fibonacci number is 1 
    elif n==1: 
        return (1)
    else: 
        return (Fibonacci(n-1)+Fibonacci(n-2)) 
print(Fibonacci(10)) 

Q82. Write a Python program to interchange the first and last element in a list.

def list_swapping(my_list):
   size_of_list = len(my_list)

   temp = my_list[0]
   my_list[0] = my_list[size_of_list - 1]
   my_list[size_of_list - 1] = temp

   return my_list

my_list = [34, 21, 56, 78, 93, 20, 11, 9]
print("The list is :")
print(my_list)
print("The function to swap the first and last elements is swapped")
print(list_swapping(my_list))


Q83. Write a Python program to swap two elements in a list.
def list_swapping(my_list):
   size_of_list = len(my_list)

   temp = my_list[0]
   my_list[0] = my_list[size_of_list - 1]
   my_list[size_of_list - 1] = temp

   return my_list

my_list = [34, 21, 56, 78, 93, 20, 11, 9]
print("The list is :")
print(my_list)
print("The function to swap the first and last elements is swapped")
print(list_swapping(my_list))


Q84. Write a Python program to find N largest element from a list.
l= [1000,298,3579,100,200,-45,900]
n = 4
  
l.sort()
print(l[-n:])
Q85. Write a Python program to find cumulative sum of a list.
a=[]
n= int(input("Enter the number of elements in list:"))
for x in range(0,n):
    element=int(input("Enter element" + str(x+1) + ":"))
    a.append(element)
b=[sum(a[0:x+1]) for x in range(0,len(a))]
print("The original list is: ",a)
print("The new list is: ",b)

Q86. Write a Python program to check if a string is palindrome or not.
x = "radar"
  
w = ""
for i in x:
    w = i + w
  
if (x == w):
    print("Yes")
else:
    print("No")


Q87. Write a Python program to remove i'th element from a string.
def remove_char(s, i):
    a = s[ : i]
    b = s[i + 1: ]

    return a+b

string = "Pythonislovely"
# Remove ith index element
i = 5
print(remove_char(string,i-1))


Q88. Write a Python program to check if a substring is present in a given string.

MyString1 = "Earth revolves around the sun"
 
if "revolves" in MyString1:
    print("Yes! it is present in the string")
else:
    print("No! it is not present")


Q89. Write a Python program to find words which are greater than given length k.

s ="A quick brown fox jump over the lamp."
length = 3
print( [ x for x in s.split() if len(x) > length ] )


Q90. Write a Python program to extract unquire dictionary values.

my_dict = {'hi' : [5,3,8, 0],
   'there' : [22, 51, 63, 77],
   'how' : [7, 0, 22],
   'are' : [12, 11, 45],
   'you' : [56, 31, 89, 90]}

print("The dictionary is : ")
print(my_dict)

my_result = list(sorted({elem for val in my_dict.values() for elem in val}))

print("The unique values are : ")
print(my_result)

Q91. Write a Python program to merge two dictionary.


def Merge(dict1, dict2):
    return(dict2.update(dict1))
 dict1 = {'a': 10, 'b': 8}
dict2 = {'d': 6, 'c': 4}
print(Merge(dict1, dict2))
print(dict2)


Q92. Write a Python program to convert a list of tuples into dictionary.
```
Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
```

def Convert(tup, di):
    for a, b in tup:
        di.setdefault(a, []).append(b)
    return di
     
  
tups= [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
dictionary = {}
print (Convert(tups, dictionary))

Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.
```
Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]
```

# creating a list
list1 = [9, 5, 6]
  
# using list comprehension to iterate each
# values in list and create a tuple as specified
result = [(val, val**3) for val in list1]
  
# print the result
print(result)


Q94. Write a Python program to get all combinations of 2 tuples.
```
Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
```
# initializing tuples
test_tuple1 = (7, 2)
test_tuple2 = (7, 8)
 
# printing original tuples
print("The original tuple 1 : " + str(test_tuple1))
print("The original tuple 2 : " + str(test_tuple2))
 
# All pair combinations of 2 tuples
# Using list comprehension
res =  [(a, b) for a in test_tuple1 for b in test_tuple2]
res = res +  [(a, b) for a in test_tuple2 for b in test_tuple1]
 
# printing result
print("The filtered tuple : " + str(res))


Q95. Write a Python program to sort a list of tuples by second item.
```
Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]
```
def Sort_Tuple(tup): 
 return(sorted(tup, key = lambda x: x[1]))  
  
tup = [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
  
# printing the sorted list of tuples
print(Sort_Tuple(tup)) 



Q96. Write a python program to print below pattern.
# input
n=5 
  
i=1;j=0
# while loop check the condition until the
# condition become false. if it is true then 
# enter in to loop and print the pattern
while(i<=n):
    while(j<=i-1):
        print("* ",end="") 
        j+=1 
     # printing next line for each row
    print("\r") 
    j=0;i+=1 
  



```
* 
* * 
* * * 
* * * * 
* * * * * 
```


Q97. Write a python program to print below pattern.
n=5;i=0
while(i<=n):
  print(" " * (n - i) +"*" * i) 
  i+=1

```
    *
   **
  ***
 ****
*****
```

Q98. Write a python program to print below pattern.
n = int(input("Enter the number of rows: "))  
m = (2 * n) - 2  
for i in range(0, n):  
    for j in range(0, m):  
        print(end=" ")  
    m = m - 1  # decrementing m after each loop  
    for j in range(0, i + 1):  
        # printing full Triangle pyramid using stars  
        print("* ", end=' ')  
    print(" ")  

```
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
```

Q99. Write a python program to print below pattern.
rows = 5
for i in range(1, rows + 1):
    for j in range(1, i + 1):
        print(j, end=' ')
    print('')

```
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
```

Q100. Write a python program to print below pattern.

def contalpha(n):
num = 65
for i in range(0, n):
    for j in range(0, i+1):
 ch = chr(num)
 print(ch, end=" ")
 num = num + 1
 print("\r")
 
```
A 
B B 
C C C 
D D D D 
E E E E E 
```